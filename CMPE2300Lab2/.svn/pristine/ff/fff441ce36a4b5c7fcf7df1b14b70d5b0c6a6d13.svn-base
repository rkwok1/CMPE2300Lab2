using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;

namespace CMPE2300Lab2
{
    public partial class UI_MainForm_Installotron : Form
    {
        List<Package> packageList = new List<Package>();

        public UI_MainForm_Installotron()
        {
            InitializeComponent();
            //Autosizes the last column in the list view to take up the full space
            UI_ListView_Text.Columns[UI_ListView_Text.Columns.Count - 1].AutoResize(ColumnHeaderAutoResizeStyle.HeaderSize);
        }
        /*******************************************Form Events*************************************************************/
        //When load File button is clicked...
        private void UI_ToolStrip_LoadFile_Click(object sender, EventArgs e)
        {

            //If user opens file dialog and checks ok
            if (UI_openFileDialog.ShowDialog().Equals(DialogResult.OK))
            {
                StreamReader srInput = new StreamReader(UI_openFileDialog.FileName);
                string line = "";
                try
                {
                    //While end of file has not been reached
                    while ((line = srInput.ReadLine()) != null)
                    {
                        //Create a package that reads the line and splits of space characters
                        Package pack = new Package(line.Split(' '));
                        //If the global package list already has this package with the same name, merges it based on the index at which it is found in the list
                        if (packageList.Contains(pack))
                        {
                            packageList[packageList.FindIndex(a => a.Equals(pack))].MergePackage(pack);
                        }
                        //Otherwise, it is a new package, add it to the list
                        else
                        {
                            packageList.Add(pack);
                        }
                    }
                }
                catch (Exception er)
                {
                    MessageBox.Show("Error Loading File: " + er.Message, "Load File", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }

                //Show File output into list view
                ShowSelectedLoad();
            }

        }
        /****************************************************************Helper Methods**********************************************************/
        public void ShowSelectedLoad()
        {
            int selectedLoad = UI_ToolStrip_SelectedView.SelectedIndex;

            switch (selectedLoad)
            {
                case 0:
                    //Loads all the packages in the global list of packages
                    foreach (Package pack in packageList)
                    {
                        //Adds name to first column
                        ListViewItem lviRow = UI_ListView_Text.Items.Add(pack.Name);
                        //Add Package dependencies to the subcolumn
                        lviRow.SubItems.Add(pack.ToString());
                    }
                    break;
                case 1:

                    break;

            }

        }


    }
}
